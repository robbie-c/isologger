{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/isologger.js","isologger.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","IsoLogger","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"LogEvent","level","args","functionName","fileName","lineNumber","columnNumber","timestamp","Logger","opts","lineNumbers","timestamps","outputs","shouldReceive","eventLogLevel","outputLogLevel","eventNumeric","levelStringToNumeric","outputNumeric","console","log","levels","notset","ConsoleOutput","debug","info","warn","error","prototype","attachCallStackFrame","callStackFrame","getFunctionName","getFileName","getLineNumber","getColumnNumber","getTimestamp","Date","now","addOutput","output","push","_createLogEvent","callSite","event","produce","_myPrepareStackTrace","_","stack","_getCallerCallSite","captureStackTrace","prepareStackTrace","err","originalPrepareStackTrace","stackFrame","arguments","logEvent","forEach","arr","consume","func","locationString","apply"],"mappings":"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","file":"isologger.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nvar levels = {\n  notset: 'notset',\n  debug: 'debug',\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error'\n};\n\nvar levelNumericToString = {\n  0: 'notset',\n  10: 'debug',\n  15: 'log',\n  20: 'info',\n  30: 'warn',\n  40: 'error'\n};\n\nvar levelStringToNumeric = {\n  notset: 0,\n  debug: 10,\n  log: 15,\n  info: 20,\n  warn: 30,\n  error: 40\n};\n\nfunction LogEvent(level, args) {\n  this.level = level;\n  this.args = args;\n  this.functionName = null;\n  this.fileName = null;\n  this.lineNumber = null;\n  this.columnNumber = null;\n  this.timestamp = null;\n}\n\nLogEvent.prototype.attachCallStackFrame = function attachCallStackFrame(callStackFrame) {\n  if (callStackFrame) {\n    if (callStackFrame.getFunctionName) {\n      this.functionName = callStackFrame.getFunctionName();\n    }\n    if (callStackFrame.getFileName) {\n      this.fileName = callStackFrame.getFileName();\n    }\n    if (callStackFrame.getLineNumber) {\n      this.lineNumber = callStackFrame.getLineNumber();\n    }\n    if (callStackFrame.getColumnNumber) {\n      this.columnNumber = callStackFrame.getColumnNumber();\n    }\n  }\n};\nLogEvent.prototype.getTimestamp = function getTimestamp() {\n  this.timestamp = Date.now();\n};\n\nfunction Logger(opts) {\n  this.lineNumbers = opts.lineNumbers || false;\n  this.timestamps = opts.timestamps || false;\n\n  this.outputs = [];\n}\n\nLogger.prototype.addOutput = function (level, output) {\n  console.log('add ouput', level, output);\n  this.outputs.push([level, output]);\n};\nLogger.prototype._createLogEvent = function (level, args, callSite) {\n  var event = new LogEvent(level, args);\n\n  if (callSite) {\n    event.attachCallStackFrame(callSite);\n  }\n\n  if (this.timestamps) {\n    event.getTimestamp();\n  }\n\n  this.produce(event);\n};\nLogger.prototype._myPrepareStackTrace = function (_, stack) {\n  // don't format it, just return raw CallSite objects\n  return stack;\n};\nLogger.prototype._getCallerCallSite = function () {\n  console.log('try to get frame', Error.captureStackTrace, Error.prepareStackTrace );\n  if (Error.captureStackTrace) {\n    var err = new Error();\n\n    var originalPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = this._myPrepareStackTrace;\n    Error.captureStackTrace(err, null);\n    var stack = err.stack;\n    Error.prepareStackTrace = originalPrepareStackTrace;\n\n    console.log('got frame');\n\n    // we want the caller's caller\n    return stack[2];\n  }\n};\nLogger.prototype.debug = function () {\n  var stackFrame = this.lineNumbers ? this._getCallerCallSite() : null;\n  this._createLogEvent(levels.debug, arguments, stackFrame)\n};\nLogger.prototype.log = function () {\n  var stackFrame = this.lineNumbers ? this._getCallerCallSite() : null;\n  this._createLogEvent(levels.log, arguments, stackFrame)\n};\nLogger.prototype.info = function () {\n  var stackFrame = this.lineNumbers ? this._getCallerCallSite() : null;\n  this._createLogEvent(levels.info, arguments, stackFrame)\n};\nLogger.prototype.warn = function () {\n  var stackFrame = this.lineNumbers ? this._getCallerCallSite() : null;\n  this._createLogEvent(levels.warn, arguments, stackFrame)\n};\nLogger.prototype.error = function () {\n  var stackFrame = this.lineNumbers ? this._getCallerCallSite() : null;\n  this._createLogEvent(levels.error, arguments, stackFrame)\n};\n\nLogger.prototype.produce = function (logEvent) {\n  console.log('produce');\n  this.outputs.forEach(function (arr) {\n    var level = arr[0];\n    var output = arr[1];\n    console.log('got output with', level);\n    if (shouldReceive(logEvent.level, level)) {\n      if (typeof output === 'function') {\n        output(logEvent);\n      } else if (typeof output.consume === 'function') {\n        output.consume(logEvent);\n      }\n    } else {\n      console.log('should not receive');\n    }\n  });\n};\n\nfunction shouldReceive(eventLogLevel, outputLogLevel) {\n  var eventNumeric = levelStringToNumeric[eventLogLevel];\n  var outputNumeric = levelStringToNumeric[outputLogLevel];\n  console.log(eventNumeric, outputNumeric);\n  return (eventNumeric >= outputNumeric) || outputNumeric === levels.notset;\n}\n\nfunction ConsoleOutput () {\n}\nConsoleOutput.prototype.consume = function consume(logEvent) {\n\n  if (typeof console !== 'undefined') {\n    var args = [];\n\n    var func;\n    switch (logEvent.level) {\n      case levels.error:\n        func = console.error;\n        break;\n      case levels.warn:\n        func = console.warn;\n        break;\n      case levels.info:\n        func = console.info;\n        break;\n      case levels.log:\n        func = console.log;\n        break;\n      case levels.debug:\n        func = console.debug;\n        break;\n      default:\n        func = console.log;\n        args.push(logEvent.level);\n        break;\n    }\n\n    console.log('timestamp', logEvent.timestamp);\n    if (logEvent.timestamp) {\n      args.push(logEvent.timestamp);\n    }\n\n    if (logEvent.functionName || logEvent.fileName) {\n      var locationString = '';\n\n      if (logEvent.functionName) {\n        locationString += logEvent.functionName;\n      }\n\n      if (logEvent.fileName) {\n        if (locationString) {\n          locationString += ' ';\n        }\n        locationString += logEvent.fileName;\n        if (logEvent.lineNumber) {\n          locationString += '::' + logEvent.lineNumber;\n          if (logEvent.columnNumber) {\n            locationString += '::' + logEvent.columnNumber;\n          }\n        }\n      }\n\n      if (locationString) {\n        args.push(locationString);\n      }\n    }\n\n    args.push.apply(args, logEvent.args);\n\n    if (func) {\n      func.apply(console, args);\n    }\n  }\n};\n\nmodule.exports = {\n  levels: levels,\n  Logger: Logger,\n  ConsoleOutput: ConsoleOutput\n};\n",null],"sourceRoot":"/source/"}